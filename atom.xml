<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[CODESIGN]]></title>
  <subtitle><![CDATA[关于程序和设计]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://shieldax.github.io/"/>
  <updated>2014-11-06T09:02:34.030Z</updated>
  <id>http://shieldax.github.io/</id>
  
  <author>
    <name><![CDATA[shieldax]]></name>
    <email><![CDATA[shieldax@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Mac截图技巧]]></title>
    <link href="http://shieldax.github.io/2014/11/06/Mac%E6%88%AA%E5%9B%BE%E6%8A%80%E5%B7%A7/"/>
    <id>http://shieldax.github.io/2014/11/06/Mac截图技巧/</id>
    <published>2014-11-06T07:08:36.000Z</published>
    <updated>2014-11-06T09:02:12.000Z</updated>
    <content type="html"><![CDATA[<p>日常工作中，有时候会需要在屏幕上截图。今天分享一下如何利用Mac自带抓图应用完成我们需要的截图任务。这里分两类方法介绍：</p>
<h2 id="菜单流">菜单流</h2>
<p>第一类方法就是通过打开“抓图”软件，利用软件清晰明了的菜单进行截图。</p>
<p>所以，首先需要在<em>应用程序</em>中找到并打开软件，你通常会在实用工具这个应用文件夹中找到。</p>
<p>接下来我们主要关注的是捕捉这个菜单项。</p>
<p><img src="http://ww2.sinaimg.cn/large/a71476e7tw1em1bm973osj20mm06w0tg.jpg" alt="捕捉菜单项"></p>
<p>点击选用的每个截图功能，都会弹出一个对话框，提示如何操作，在此就不赘述了。只需要按照实际情况使用不同截图方式便可。</p>
<p>这里要说的是使用这种方式只适合不熟悉的软件功能的时候使用。<br>要想提高效率还是要使用快捷键的方式完成任务 &gt;&gt;</p>
<h2 id="快捷键流">快捷键流</h2>
<p>这里的快捷键跟不是前面菜单旁边提示的快捷键，而是Mac系统提供的快捷键，不需要借助于上面的软件就能完美实现截图。</p>
<p>快捷键一：截取整个屏幕</p>
<p><kbd>command</kbd> + <kbd>shift</kbd> + <kbd>3</kbd></p>
<p>比如在这种全屏的时候<br><img src="http://ww3.sinaimg.cn/large/a71476e7jw1em1cezed46j21kw0zkdof.jpg" alt="全屏"><br>只需要上面的快捷键可以轻松截取当前整个屏幕。</p>
<p>快捷键二：截取部分屏幕</p>
<p><kbd>command</kbd> + <kbd>shift</kbd> + <kbd>4</kbd></p>
<p>连续按下上面的三个键后，光标会变成十字状，旁边显示坐标以作辅助。</p>
<p>拖拽光标画出一个截图区域后，系统会自动将图片保存至桌面上。</p>
<p>如果拖拽光标画出一个区域后不松开鼠标，可以</p>
<p>按住空格键，对移动当前截图区域而不需要重新选择；<br>按住 shift 键，可以只对截图区域进行一个方向的缩放；<br>按住 option 键，则是在保证长宽比的情况下进行缩放；<br>如果想要放弃本次截图，只需要按一下 esc 键。</p>
<p>通过上面的组合，截图的时候很容易控制。</p>
<p>快捷键三：截取窗口</p>
<p>按下快捷键二后再按空格，即可切换到窗口截取模式（光标变成照相机的形状）。<br>将光标（鼠标）移动到需要截取的窗口，单击鼠标左键即可。<br><img src="http://ww1.sinaimg.cn/large/a71476e7jw1em1dlqfzwhj211c0pw463.jpg" alt="抓取窗口"></p>
<p>可以看到抓取的窗口会带上一个漂亮的投影，档吃瞬间提高了不少 <em> _ </em><br>当然如果不需要阴影，只需要用菜单流的方式抓图窗口即可。</p>
<p>Happy Mac ↑</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>日常工作中，有时候会需要在屏幕上截图。今天分享一下如何利用Mac自带抓图应用完成我们需要的截图任务。这里分两类方法介绍：</p>
<h2 id="菜单流">菜单流</h2>
<p>第一类方法就是通过打开“抓图”软件，利用软件清晰明了的菜单进行截图。</p>
<p>所以，首先]]>
    </summary>
    
      <category term="mac" scheme="http://shieldax.github.io/tags/mac/"/>
    
      <category term="截图" scheme="http://shieldax.github.io/tags/%E6%88%AA%E5%9B%BE/"/>
    
      <category term="osx" scheme="http://shieldax.github.io/tags/osx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[锋利的Node.js图片处理库sharp]]></title>
    <link href="http://shieldax.github.io/2014/10/31/%E9%94%8B%E5%88%A9%E7%9A%84Node-js%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%E5%BA%93sharp/"/>
    <id>http://shieldax.github.io/2014/10/31/锋利的Node-js图片处理库sharp/</id>
    <published>2014-10-31T14:12:59.000Z</published>
    <updated>2014-11-01T05:32:33.000Z</updated>
    <content type="html"><![CDATA[<p>由于项目中需要用户上传的头像的功能，所以就参照一些网站实现在线图片裁切的功能。<br>经过朋友推荐和多方比较，前端采用 Jcrop 和 jQuery Form 实现用户界面，把用户要裁切的图片区域和图片异步的方式提交后端。<br>而后端则负责对图片的裁切，输出并保存为用户头像。</p>
<p>这篇主要以Express框架为例介绍如何在Node.js开发环境中使用sharp库处理图片。</p>
<p><a href="https://github.com/lovell/sharp" target="_blank" rel="external">sharp</a>是由伦敦的一位开发者<a href="https://github.com/lovell" target="_blank" rel="external">lovell</a>开发的基于libvips的一款轻快的图片处理库。<br>以下是原文介绍，详情可以戳上面的Github链接了解更多。</p>
<blockquote>
<p>The fastest Node.js module for resizing JPEG, PNG, WebP and TIFF images. Uses the libvips library.</p>
</blockquote>
<h2 id="安装">安装</h2>
<p>关于安装需要注意除了基本的Node.js开发环境之外，还需要预装libvips库。关于如何在各个平台上安装vips，其GitHub页面已经给出详细的参考，我在CentOS和Mac OS上都已成功预装。不过在Mac上安装时遇到一些问题，已经在之前的<a href="http://shieldax.github.io/2014/10/31/%E8%A7%A3%E5%86%B3%E5%9C%A8OS-X%E5%AE%89%E8%A3%85libvips%E5%9B%BE%E5%BD%A2%E5%BA%93%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="external">文章</a>中给出相应的解决过程。</p>
<p>按照官方提示安装好sharp之后就可以开始对图片进行裁切、缩放、旋转，并且可以更改图片的输出格式，质量等。这些已经完全能满足裁切头像的需求了！</p>
<h2 id="使用">使用</h2>
<p>首先自然是需要引入sharp库</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sharp = <span class="built_in">require</span>(<span class="string">'sharp'</span>);</div></pre></td></tr></table></figure>

<h4 id="风格">风格</h4>
<p>sharp使用的是跟jQuery类似的链式操作风格：<code>sharp(&#39;input.jpg&#39;).resize(300, 300).max() ...</code></p>
<h4 id="示例">示例</h4>
<p>下面代码（有省略）就是根据前台传送过来的裁切数据，进行裁切的<strong>片段</strong>：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 对数据格式进行转换</span></div><div class="line"><span class="keyword">var</span> left = data.x;</div><div class="line"><span class="keyword">var</span> top = data.y;</div><div class="line"><span class="keyword">var</span> width = data.w;</div><div class="line"><span class="keyword">var</span> height = data.h;</div><div class="line"></div><div class="line"><span class="comment">// 获取上传的图片，进行裁切</span></div><div class="line">fs.exists(imagePath, <span class="function"><span class="keyword">function</span><span class="params">(exists)</span></span>{</div><div class="line">  <span class="keyword">if</span> (exists) {</div><div class="line">    sharp(imagePath)</div><div class="line">    .extract(top, left, width, height)</div><div class="line">    .resize(<span class="number">150</span>, <span class="number">150</span>)</div><div class="line">    .sharpen()</div><div class="line">    .quality(<span class="number">100</span>)</div><div class="line">    .toFile(avatarPath, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>{</div><div class="line">      <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'Completed!'</span>);        </div><div class="line">      <span class="comment">// 更新数据库</span></div><div class="line">      ...</div><div class="line">      <span class="comment">// 头像保存成功，返回成功消息给前端</span></div><div class="line">      res.json({success: <span class="literal">true</span>, data: {message: <span class="string">'头像已保存'</span>}});</div><div class="line">    });</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'原图已过期，请重新上传'</span>);</div><div class="line">    res.json({success: <span class="literal">false</span>, data: {message: <span class="string">'操作超时，请重新上传'</span>}});</div><div class="line">  }</div><div class="line">});</div></pre></td></tr></table></figure>

<p>通过上面的一段代码，就可以实现对用户前一步上传的图片进行制定范围的裁切。<br>开始裁切图片之前需要检查图片是否存在，如果已经丢失或未保存则返回错误信息告知前端用户。<br>接下来就是使用sharp对图片进行实际的操作，sharp API的链式调用方式使得处理图片如同工厂里的流水线拼接。</p>
<p>首先，把图片路径<code>imagePath</code>传递给sharp把这张图片送入车间；</p>
<p>然后是调用<code>extract(top, left, width, height)</code>按照裁切图纸，也就是裁切坐标对图片进行粗加工。这里需要注意的是需要对坐标进行简单的置换——第一个参数对应图片的起始纵坐标<code>data.y</code>，第二个参数则对应裁切区域的起始横坐标<code>data.x</code>；</p>
<p>接下来是通过<code>resize(width, height)</code>将图片按照制定规格进行缩放；</p>
<p>当然加工的图片还需要对其质量进行控制，这里通过<code>sharpen()</code>和<code>quality()</code>分别对图片进行锐化和设定输出质量。<code>quality()</code>针对JPEG， WebP 和 TIFF三种可以控制输出质量的格式进行控制，范围为1~100，默认为80，似乎和Photoshop默认的JPEG输出质量一致；</p>
<p>最后一步就是对加工完成的图片进行输出，sharp提供了pipe和文件两种方式，这里用到的是直接另存为图片的方式，使用<code>toFile()</code>完成最后的出厂工作。指定的输出图片路径可以是已经存在的图片，只要有文件写入权限sharp会覆盖旧的文件。但是目标文件不能是输入源，也就是不能把加工出来的成品和加工原材料放在同一个位置；<br><code>toFile()</code>还接受另一个参数即回调函数，这个回调函数只接收一个错误信息作为参数，从而可以判断图片处理是否成功。这里选择在成功保存头像后将裁切数据保存在数据库中，这样就可以实现帮助用户重新载入裁切区域的功能。</p>
<h5 id="常见错误">常见错误</h5>
<p><code>Bad extract area</code><br>在使用<code>extract()</code>对图片进行裁切时，主要注意裁切坐标只能在图片自身的范围内，比如起点横坐标left加上裁切横长width超过了图片的右边界，sharp会报出<code>Bad extract area</code>非法裁切区域的错误，特别注意前面提到的左上横高的参数顺序。当然我们可以在裁切前，通过sharp提供的另外一个接口先获取图片的尺寸。</p>
<h5 id="获取图片信息">获取图片信息</h5>
<p>在对图片进行处理之前，往往需要先获取图片的尺寸格式等基本进行。sharp中可以通过<code>metadata()</code>获取图片的一些重要的元数据，比如尺寸、格式和颜色空间等。用法可以参考官方的示例：</p>
<figure class="highlight {javascript}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> image = sharp(inputJpg);</div><div class="line">image.metadata(<span class="function"><span class="keyword">function</span><span class="params">(err, metadata)</span> </span>{</div><div class="line">  image.resize(metadata.width / <span class="number">2</span>).webp().toBuffer(<span class="function"><span class="keyword">function</span><span class="params">(err, outputBuffer, info)</span> </span>{</div><div class="line">    <span class="comment">// outputBuffer contains a WebP image half the width and height of the original JPEG</span></div><div class="line">  });</div><div class="line">});</div></pre></td></tr></table></figure>

<p>上面的例子，输出的Buffer信息是一个源图片宽和高各缩小一半的WebP格式图片。</p>
<p>关于sharp的性能，可以参考官方给出的同imagemagick-native，imagemagick，gm进行对比测试样本：<a href="https://github.com/lovell/sharp#performance" target="_blank" rel="external">Performance</a></p>
<p>gm是另一个Node.js开发环境下的图形处理库（包），不过gm所使用的底层库是更加常见 GraphicsMagick，相信对于开发过图片处理模块的PHPer来说很熟悉了。我在选择包的时候比较看重其效率，在看到sharp简述中的Fast后就决定试用一下。如果你也正在寻找一个在Node.js中高性能的图片处理方式，不妨试试sharp！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于项目中需要用户上传的头像的功能，所以就参照一些网站实现在线图片裁切的功能。<br>经过朋友推荐和多方比较，前端采用 Jcrop 和 jQuery Form 实现用户界面，把用户要裁切的图片区域和图片异步的方式提交后端。<br>而后端则负责对图片的裁切，输出并保存为用户头]]>
    </summary>
    
      <category term="Node.js" scheme="http://shieldax.github.io/tags/Node-js/"/>
    
      <category term="图片处理" scheme="http://shieldax.github.io/tags/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
      <category term="库" scheme="http://shieldax.github.io/tags/%E5%BA%93/"/>
    
      <category term="开发" scheme="http://shieldax.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Passport笔记]]></title>
    <link href="http://shieldax.github.io/2014/10/31/Passport%E7%AC%94%E8%AE%B0/"/>
    <id>http://shieldax.github.io/2014/10/31/Passport笔记/</id>
    <published>2014-10-31T01:11:43.000Z</published>
    <updated>2014-11-01T06:51:02.000Z</updated>
    <content type="html"><![CDATA[<p>Things to be notice 写在前面：这篇文主要是Passport官方文档的阅读笔记，多有纰漏，仅做参考。This post only notes things need to be noted while taking advantage of Passport.</p>
<p>Passport是一个可扩展的（用户）认证框架；<br>Passport借助于其丰富可选的认证策略帮你搭建现代的用户认证系统。（包括OAuth以及OpenID）</p>
<h3 id="Strategies">Strategies</h3>
<blockquote>
<p>Before asking Passport to authenticate a request, the strategy (or strategies) used by an application must be configured.</p>
</blockquote>
<p>在使用Passport进行（用户）认证之前，必须配置你的应用需要使用的认证策略。</p>
<p>比如使用<code>LocalStrategy</code>可以搭建单纯的用户名密码认证（即登录，注册等）。</p>
<h4 id="Verify_Callback">Verify Callback</h4>
<p>认证回调用于验证用户是否拥有登录资格<br><code>function (username, password, done)</code></p>
<p>通过done回调函数返回认证结果</p>
<p><code>done(error, user, info)</code></p>
<h3 id="中间件">中间件</h3>
<p>在以Connect或者Express为基础的应用中，需要用到<code>passport.initialize()</code>这个中间件来对Passport进行初始化。<br>另外如果需要启用Session来保存用户对话，还需要在系统启用session后（即<code>app.use(express.session());</code>）引入<code>passport.session()</code>中间件<br>才可以保证对话能被成功地存起来。</p>
<blockquote>
<p>If enabled, be sure to use express.session() before passport.session() to ensure that the login session is restored in the correct order.</p>
</blockquote>
<h3 id="Sessions">Sessions</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">passport.serializeUser(<span class="function"><span class="keyword">function</span><span class="params">(user, done)</span> </span>{</div><div class="line">  done(<span class="literal">null</span>, user.id);</div><div class="line">});</div><div class="line"></div><div class="line">passport.deserializeUser(<span class="function"><span class="keyword">function</span><span class="params">(id, done)</span> </span>{</div><div class="line">  User.findById(id, <span class="function"><span class="keyword">function</span><span class="params">(err, user)</span> </span>{</div><div class="line">    done(err, user);</div><div class="line">  });</div><div class="line">});</div></pre></td></tr></table></figure>

<p>对用户对话进行“编解码”，由应用层决定并完成编解码方式，并且不受认证层的干扰和限制。</p>
<h3 id="内置操作">内置操作</h3>
<h4 id="Log_In">Log In</h4>
<p>Passport提供了<code>req.login()</code>别名<code>req.logIn()</code>的方法完成对话创建。<br>注意，<code>passport.authenticate()</code>中间件已经包含了对此方法的调用。一般只在允许用户注册成功后立即将其账户登录时，手动调用<code>req.login()</code>完成对话的创建。</p>
<h3 id="Authorize">Authorize</h3>
<p>现在很多应用会有这样的需求：允许用户用N个第三方账户登录系统。于是就需要让用户进行多个第三方的授权，即通常所说的Connect。中文多对应为“绑定”。<br>当然用户一般可以随时“解绑”~</p>
<p>这样用户就可以同时绑定微博和QQ以及人人网等账号，并在随后用任意的方式登录应用。如此一来用户体验会得到提升，并且应用可以获得找到潜在用户的途径，不解释 → →</p>
<p>当然对于绑定来说，用户首先（不管用哪一方）要能登录到应用中来，然后才可能绑到已经登录的账号上。</p>
<p>对于这种需求，passport提供了另一个接口<code>passport.authorize()</code></p>
<h3 id="User_Profile">User Profile</h3>
<p>标准化用户信息的常用字段：</p>
<ul>
<li><code>provider</code>{String} 认证方，提供认证的第三方服务的名称</li>
<li><code>id</code>{String} 用户在第三方的标识ID</li>
<li><code>displayName</code>{String} 顾名思义，在第三方显示用的名字，相当于昵称</li>
<li><code>name</code>{Object}<ul>
<li><code>familyName</code>{String} 姓氏，西方文化中的 Last name</li>
<li><code>givenName</code>{String} 名字，对应 First Name</li>
<li><code>middleName</code>{String} 中文没有对应概念，一般只出现在一些西方国家的人名中，涉及较少</li>
</ul>
</li>
<li><code>emails</code>{Array}[n]<ul>
<li><code>value</code>{String}实际存放邮件地址的字段</li>
<li><code>type</code>{String}按照标准区分电子邮箱<em>用途</em>，如家庭，工作等</li>
</ul>
</li>
<li><code>photos</code>{Array}[n]<ul>
<li><code>value</code>{String}实际存放图片地址的字段</li>
</ul>
</li>
</ul>
<p>以上只是较为基本常用的信息字段，各个第三方提供的个人信息不仅相同，通常还是需要查看具体的官方相关说明。</p>
<p>需要提一下，两个我时常会混淆的单词：</p>
<ol>
<li>Authorize [ˈɔːθəraɪz] 授权</li>
<li>Authenticate [ɔː’θentɪkeɪt] 认证，验证</li>
</ol>
<p>To Be Append…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Things to be notice 写在前面：这篇文主要是Passport官方文档的阅读笔记，多有纰漏，仅做参考。This post only notes things need to be noted while taking advantage of Passpor]]>
    </summary>
    
      <category term="笔记" scheme="http://shieldax.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="库" scheme="http://shieldax.github.io/tags/%E5%BA%93/"/>
    
      <category term="Node.js" scheme="http://shieldax.github.io/tags/Node-js/"/>
    
      <category term="Auth" scheme="http://shieldax.github.io/tags/Auth/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Error Cache Miss 调试错误]]></title>
    <link href="http://shieldax.github.io/2014/10/31/Error-Cache-Miss-%E8%B0%83%E8%AF%95%E9%94%99%E8%AF%AF/"/>
    <id>http://shieldax.github.io/2014/10/31/Error-Cache-Miss-调试错误/</id>
    <published>2014-10-31T01:06:42.000Z</published>
    <updated>2014-11-01T06:47:58.000Z</updated>
    <content type="html"><![CDATA[<p>在使用jqueryForm进行调试的时候（以Ajax方式提交表单），发现程序逻辑运行没有问题，但是每次打开chrome的开发者工具，console中总是出现一条<code>Failed to load resource: net::ERR_CACHE_MISS</code>的错误信息，怀疑是Jade编译出的javascript文本有问题，发现分离出单独的js脚本也没有效果。</p>
<p>最后在百度上搜到了阿里云的一个帖子：<br><a href="http://bbs.aliyun.com/read/178977.html" target="_blank" rel="external">http://bbs.aliyun.com/read/178977.html</a></p>
<p>核心内容是这样的：</p>
<p>开发人员工具载入缓存的时候，说找不到资源。<br>问题根本在于你先打开页面，再打开chrome的开发人员工具。而页面本身设置了no-store 无缓存，所以后者打开的开发人员工具去不到缓存。如果你已经打开开发者工具的时候，再刷新就不会有这个错误了…</p>
<p>检查了一下页面Header，果然是通过<code>Cache-Control: max-age=0</code>使得页面没有缓存可以被读取。<br>好在不影响程序本身的运行，暂时可以忽略。</p>
<p>Continue Coding！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在使用jqueryForm进行调试的时候（以Ajax方式提交表单），发现程序逻辑运行没有问题，但是每次打开chrome的开发者工具，console中总是出现一条<code>Failed to load resource: net::ERR_CACHE_MISS</code>]]>
    </summary>
    
      <category term="调试" scheme="http://shieldax.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决在OS X安装libvips图形库的问题]]></title>
    <link href="http://shieldax.github.io/2014/10/31/%E8%A7%A3%E5%86%B3%E5%9C%A8OS-X%E5%AE%89%E8%A3%85libvips%E5%9B%BE%E5%BD%A2%E5%BA%93%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://shieldax.github.io/2014/10/31/解决在OS-X安装libvips图形库的问题/</id>
    <published>2014-10-31T00:56:28.000Z</published>
    <updated>2014-11-01T04:50:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="解决vips库安装失败问题">解决vips库安装失败问题</h2>
<p>写在前面：本文列出了问题解决的思路和过程，如果需要直接找到简洁的答案，请（mei）移(ce)步(shi)：<br><a href="http://stackoverflow.com/questions/26195880/libvips-cannot-install-due-to-wrong-python-location" target="_blank" rel="external">http://stackoverflow.com/questions/26195880/libvips-cannot-install-due-to-wrong-python-location</a></p>
<p>手头上的项目需要在服务器端使用Node.js进行图片处理，一番折腾后找到了gm和lovell/sharp两个库。<br>由于sharp依赖于libvips，所以尝试在本地的OS中安装先。<br>按照sharp的提示，执行：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">brew</span> <span class="comment">install</span> <span class="comment">homebrew/science/vips</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">webp</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">graphicsmagick</span></div></pre></td></tr></table></figure>

<p>brew工作后开始安装各种依赖先，就在所有依赖包都安装完成后，brew抛出异常：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">==&gt; <span class="type">Installing</span> vips from homebrew/homebrew-science</div><div class="line">==&gt; <span class="type">Downloading</span> http:<span class="comment">//www.vips.ecs.soton.ac.uk/supported/7.40/vips-7.40.11.tar.gz</span></div><div class="line"><span class="type">Already</span> downloaded: /<span class="type">Library</span>/<span class="type">Caches</span>/<span class="type">Homebrew</span>/vips-<span class="number">7.40</span>.<span class="number">11</span>.tar.gz</div><div class="line">==&gt; ./configure --<span class="keyword">prefix</span>=/usr/local/<span class="type">Cellar</span>/vips/<span class="number">7.40</span>.<span class="number">11</span> --with-magick --with-magickpackage=<span class="type">GraphicsMagick</span></div><div class="line">==&gt; make check</div><div class="line">/usr/local/<span class="type">Cellar</span>/gobject-introspection/<span class="number">1.42</span>.<span class="number">0</span>/bin/g-ir-scanner  --add-include-path=. --namespace=<span class="type">Vips</span> --nsversion=<span class="number">8.0</span> --libtool=<span class="string">"/bin/sh ../libtool"</span>  --include=<span class="type">GObject</span>-<span class="number">2.0</span>   --library=libvips.la --warn-all --verbose --identifier-<span class="keyword">prefix</span>=<span class="type">Vips</span> --identifier-<span class="keyword">prefix</span>=vips --symbol-<span class="keyword">prefix</span>=vips --symbol-<span class="keyword">prefix</span>=im --symbol-<span class="keyword">prefix</span>=im_  --cflags-begin  -<span class="type">I</span>../libvips/include --cflags-end  arithmetic/<span class="built_in">abs</span>.<span class="built_in">c</span> arithmetic/add.<span class="built_in">c</span> arithmetic/arithmetic.<span class="built_in">c</span> arithmetic/avg.<span class="built_in">c</span> arithmetic/binary.<span class="built_in">c</span> arithmetic/boolean.<span class="built_in">c</span> arithmetic/complex.<span class="built_in">c</span> arithmetic/deviate.<span class="built_in">c</span> arithmetic/divide.<span class="built_in">c</span> arithmetic/getpoint.<span class="built_in">c</span> arithmetic/hist_find.<span class="built_in">c</span> arithmetic/hist_find_indexed.<span class="built_in">c</span> arithmetic/hist_find_ndim.<span class="built_in">c</span> arithmetic/hough.<span class="built_in">c</span> arithmetic/hough_circle.<span class="built_in">c</span> arithmetic/hough_line.<span class="built_in">c</span> arithmetic/invert.<span class="built_in">c</span> arithmetic/linear.<span class="built_in">c</span> arithmetic/math.<span class="built_in">c</span> arithmetic/math2.<span class="built_in">c</span> arithmetic/<span class="built_in">max</span>.<span class="built_in">c</span> arithmetic/measure.<span class="built_in">c</span> arithmetic/<span class="built_in">min</span>.<span class="built_in">c</span> arithmetic/multiply.<span class="built_in">c</span> arithmetic/nary.<span class="built_in">c</span> arithmetic/profile.<span class="built_in">c</span> arithmetic/project.<span class="built_in">c</span> arithmetic/relational.<span class="built_in">c</span> arithmetic/remainder.<span class="built_in">c</span> arithmetic/round.<span class="built_in">c</span> arithmetic/sign.<span class="built_in">c</span> arithmetic/statistic.<span class="built_in">c</span> arithmetic/stats.<span class="built_in">c</span> arithmetic/subtract.<span class="built_in">c</span> arithmetic/sum.<span class="built_in">c</span> arithmetic/unary.<span class="built_in">c</span> arithmetic/unaryconst.<span class="built_in">c</span> cimg/cimg_dispatch.<span class="built_in">c</span> colour/colour.<span class="built_in">c</span> colour/colourspace.<span class="built_in">c</span> colour/dE00.<span class="built_in">c</span> colour/dE76.<span class="built_in">c</span> colour/dECMC.<span class="built_in">c</span> colour/float2rad.<span class="built_in">c</span> colour/icc_transform.<span class="built_in">c</span> colour/<span class="type">Lab2LabQ</span>.<span class="built_in">c</span> colour/<span class="type">Lab2LabS</span>.<span class="built_in">c</span> colour/<span class="type">Lab2LCh</span>.<span class="built_in">c</span> colour/<span class="type">Lab2XYZ</span>.<span class="built_in">c</span> colour/<span class="type">LabQ2Lab</span>.<span class="built_in">c</span> colour/<span class="type">LabQ2LabS</span>.<span class="built_in">c</span> colour/<span class="type">LabQ2sRGB</span>.<span class="built_in">c</span> colour/<span class="type">LabS2Lab</span>.<span class="built_in">c</span> colour/<span class="type">LabS2LabQ</span>.<span class="built_in">c</span> colour/<span class="type">LCh2Lab</span>.<span class="built_in">c</span> colour/<span class="type">LCh2UCS</span>.<span class="built_in">c</span> colour/rad2float.<span class="built_in">c</span> colour/scRGB2sRGB.<span class="built_in">c</span> colour/scRGB2XYZ.<span class="built_in">c</span> colour/sRGB2scRGB.<span class="built_in">c</span> colour/<span class="type">UCS2LCh</span>.<span class="built_in">c</span> colour/<span class="type">XYZ2Lab</span>.<span class="built_in">c</span> colour/<span class="type">XYZ2scRGB</span>.<span class="built_in">c</span> colour/<span class="type">XYZ2Yxy</span>.<span class="built_in">c</span> colour/<span class="type">Yxy2XYZ</span>.<span class="built_in">c</span> conversion/bandary.<span class="built_in">c</span> conversion/bandbool.<span class="built_in">c</span> conversion/bandjoin.<span class="built_in">c</span> conversion/bandmean.<span class="built_in">c</span> conversion/bandrank.<span class="built_in">c</span> conversion/cache.<span class="built_in">c</span> conversion/cast.<span class="built_in">c</span> conversion/conversion.<span class="built_in">c</span> conversion/copy.<span class="built_in">c</span> conversion/embed.<span class="built_in">c</span> conversion/extract.<span class="built_in">c</span> conversion/falsecolour.<span class="built_in">c</span> conversion/flatten.<span class="built_in">c</span> conversion/flip.<span class="built_in">c</span> conversion/gamma.<span class="built_in">c</span> conversion/grid.<span class="built_in">c</span> conversion/ifthenelse.<span class="built_in">c</span> conversion/insert.<span class="built_in">c</span> conversion/<span class="built_in">join</span>.<span class="built_in">c</span> conversion/msb.<span class="built_in">c</span> conversion/recomb.<span class="built_in">c</span> conversion/replicate.<span class="built_in">c</span> conversion/rot.<span class="built_in">c</span> conversion/rot45.<span class="built_in">c</span> conversion/scale.<span class="built_in">c</span> conversion/sequential.<span class="built_in">c</span> conversion/subsample.<span class="built_in">c</span> conversion/tilecache.<span class="built_in">c</span> conversion/wrap.<span class="built_in">c</span> conversion/zoom.<span class="built_in">c</span> convolution/compass.<span class="built_in">c</span> convolution/conv.<span class="built_in">c</span> convolution/convolution.<span class="built_in">c</span> convolution/convsep.<span class="built_in">c</span> convolution/correlation.<span class="built_in">c</span> convolution/fastcor.<span class="built_in">c</span> convolution/gaussblur.<span class="built_in">c</span> convolution/im_aconv.<span class="built_in">c</span> convolution/im_aconvsep.<span class="built_in">c</span> convolution/im_conv.<span class="built_in">c</span> convolution/im_conv_f.<span class="built_in">c</span> convolution/sharpen.<span class="built_in">c</span> convolution/spcor.<span class="built_in">c</span> create/black.<span class="built_in">c</span> create/buildlut.<span class="built_in">c</span> create/create.<span class="built_in">c</span> create/eye.<span class="built_in">c</span> create/fractsurf.<span class="built_in">c</span> create/gaussmat.<span class="built_in">c</span> create/gaussnoise.<span class="built_in">c</span> create/grey.<span class="built_in">c</span> create/identity.<span class="built_in">c</span> create/im_benchmark.<span class="built_in">c</span> create/invertlut.<span class="built_in">c</span> create/logmat.<span class="built_in">c</span> create/mask.<span class="built_in">c</span> create/mask_butterworth.<span class="built_in">c</span> create/mask_butterworth_band.<span class="built_in">c</span> create/mask_butterworth_ring.<span class="built_in">c</span> create/mask_fractal.<span class="built_in">c</span> create/mask_gaussian.<span class="built_in">c</span> create/mask_gaussian_band.<span class="built_in">c</span> create/mask_gaussian_ring.<span class="built_in">c</span> create/mask_ideal.<span class="built_in">c</span> create/mask_ideal_band.<span class="built_in">c</span> create/mask_ideal_ring.<span class="built_in">c</span> create/other_dispatch.<span class="built_in">c</span> create/point.<span class="built_in">c</span> create/sines.<span class="built_in">c</span> create/text.<span class="built_in">c</span> create/tonelut.<span class="built_in">c</span> create/xyz.<span class="built_in">c</span> create/zone.<span class="built_in">c</span> draw/draw.<span class="built_in">c</span> draw/draw_circle.<span class="built_in">c</span> draw/draw_flood.<span class="built_in">c</span> draw/draw_image.<span class="built_in">c</span> draw/draw_line.<span class="built_in">c</span> draw/draw_mask.<span class="built_in">c</span> draw/draw_rect.<span class="built_in">c</span> draw/draw_smudge.<span class="built_in">c</span> draw/drawink.<span class="built_in">c</span> foreign/analyze2vips.<span class="built_in">c</span> foreign/analyzeload.<span class="built_in">c</span> foreign/csv.<span class="built_in">c</span> foreign/csvload.<span class="built_in">c</span> foreign/csvsave.<span class="built_in">c</span> foreign/dzsave.<span class="built_in">c</span> foreign/fits.<span class="built_in">c</span> foreign/fitsload.<span class="built_in">c</span> foreign/fitssave.<span class="built_in">c</span> foreign/foreign.<span class="built_in">c</span> foreign/jpeg2vips.<span class="built_in">c</span> foreign/jpegload.<span class="built_in">c</span> foreign/jpegsave.<span class="built_in">c</span> foreign/magick2vips.<span class="built_in">c</span> foreign/magickload.<span class="built_in">c</span> foreign/matlab.<span class="built_in">c</span> foreign/matload.<span class="built_in">c</span> foreign/matrixload.<span class="built_in">c</span> foreign/matrixsave.<span class="built_in">c</span> foreign/openexr2vips.<span class="built_in">c</span> foreign/openexrload.<span class="built_in">c</span> foreign/openslide2vips.<span class="built_in">c</span> foreign/openslideload.<span class="built_in">c</span> foreign/pngload.<span class="built_in">c</span> foreign/pngsave.<span class="built_in">c</span> foreign/ppm.<span class="built_in">c</span> foreign/ppmload.<span class="built_in">c</span> foreign/ppmsave.<span class="built_in">c</span> foreign/radiance.<span class="built_in">c</span> foreign/radload.<span class="built_in">c</span> foreign/radsave.<span class="built_in">c</span> foreign/rawload.<span class="built_in">c</span> foreign/rawsave.<span class="built_in">c</span> foreign/tiff2vips.<span class="built_in">c</span> foreign/tiffload.<span class="built_in">c</span> foreign/tiffsave.<span class="built_in">c</span> foreign/vips2jpeg.<span class="built_in">c</span> foreign/vips2tiff.<span class="built_in">c</span> foreign/vips2webp.<span class="built_in">c</span> foreign/vipsload.<span class="built_in">c</span> foreign/vipspng.<span class="built_in">c</span> foreign/vipssave.<span class="built_in">c</span> foreign/webp2vips.<span class="built_in">c</span> foreign/webpload.<span class="built_in">c</span> foreign/webpsave.<span class="built_in">c</span> freqfilt/freqfilt.<span class="built_in">c</span> freqfilt/freqmult.<span class="built_in">c</span> freqfilt/fwfft.<span class="built_in">c</span> freqfilt/invfft.<span class="built_in">c</span> freqfilt/phasecor.<span class="built_in">c</span> freqfilt/spectrum.<span class="built_in">c</span> histogram/hist_cum.<span class="built_in">c</span> histogram/hist_equal.<span class="built_in">c</span> histogram/hist_ismonotonic.<span class="built_in">c</span> histogram/hist_local.<span class="built_in">c</span> histogram/hist_match.<span class="built_in">c</span> histogram/hist_norm.<span class="built_in">c</span> histogram/hist_plot.<span class="built_in">c</span> histogram/hist_unary.<span class="built_in">c</span> histogram/histogram.<span class="built_in">c</span> histogram/maplut.<span class="built_in">c</span> histogram/percent.<span class="built_in">c</span> histogram/stdif.<span class="built_in">c</span> iofuncs/base64.<span class="built_in">c</span> iofuncs/buf.<span class="built_in">c</span> iofuncs/buffer.<span class="built_in">c</span> iofuncs/cache.<span class="built_in">c</span> iofuncs/<span class="class"><span class="keyword">enum</span><span class="title">types</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">error</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">gate</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">generate</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">header</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">image</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">init</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">mapfile</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">memory</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">object</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">operation</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">rect</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">region</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">semaphore</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">sink</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">sinkdisc</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">sinkmemory</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">sinkscreen</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">system</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">threadpool</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">type</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">util</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">vector</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">vips</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">vipsmarshal</span>.<span class="title">c</span> <span class="title">iofuncs</span>/<span class="title">window</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">countlines</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">hitmiss</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">labelregions</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">morph</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">morphology</span>.<span class="title">c</span> <span class="title">morphology</span>/<span class="title">rank</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">global_balance</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_avgdxdy</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_chkpair</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_clinear</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_improve</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_initialize</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_lrcalcon</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_lrmerge</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_lrmosaic</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_remosaic</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_tbcalcon</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_tbmerge</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">im_tbmosaic</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">match</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">merge</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">mosaic</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">mosaic1</span>.<span class="title">c</span> <span class="title">mosaicing</span>/<span class="title">mosaicing</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">affine</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">interpolate</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">quadratic</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">resample</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">shrink</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">similarity</span>.<span class="title">c</span> <span class="title">resample</span>/<span class="title">transform</span>.<span class="title">c</span> <span class="title">video</span>/<span class="title">im_video_test</span>.<span class="title">c</span> <span class="title">video</span>/<span class="title">video_dispatch</span>.<span class="title">c</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">basic</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">vips</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">object</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">image</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">error</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">foreign</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">interpolate</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">header</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">operation</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">enumtypes</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">arithmetic</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">conversion</span>.<span class="title">h</span> <span class="title">include</span>/<span class="title">vips</span>/<span class="title">type</span>.<span class="title">h</span> <span class="title">libvips</span>.<span class="title">la</span> --<span class="title">output</span> <span class="title">Vips</span>-8.0.<span class="title">gir</span></span></div><div class="line">/<span class="title">bin</span>/<span class="title">sh</span>: /<span class="title">usr</span>/<span class="title">local</span>/<span class="title">Cellar</span>/<span class="title">gobject</span>-<span class="title">introspection</span>/1.42.0/<span class="title">bin</span>/<span class="title">g</span>-<span class="title">ir</span>-<span class="title">scanner</span>: /<span class="title">usr</span>/<span class="title">local</span>/<span class="title">opt</span>/<span class="title">python</span>/<span class="title">bin</span>/<span class="title">python</span>: <span class="title">bad</span> <span class="title">interpreter</span>: <span class="title">No</span> <span class="title">such</span> <span class="title">file</span> <span class="title">or</span> <span class="title">directory</span></div><div class="line"><span class="title">make</span>[2]: *** [<span class="title">Vips</span>-8.0.<span class="title">gir</span>] <span class="title">Error</span> 126</div><div class="line"><span class="title">make</span>[1]: *** [<span class="title">check</span>-<span class="title">recursive</span>] <span class="title">Error</span> 1</div><div class="line"><span class="title">make</span>: *** [<span class="title">check</span>-<span class="title">recursive</span>] <span class="title">Error</span> 1</div><div class="line"></div><div class="line"><span class="title">READ</span> <span class="title">THIS</span>: <span class="title">https</span>://<span class="title">github</span>.<span class="title">com</span>/<span class="title">Homebrew</span>/<span class="title">homebrew</span>/<span class="title">wiki</span>/<span class="title">troubleshooting</span></div><div class="line"><span class="title">If</span> <span class="title">reporting</span> <span class="title">this</span> <span class="title">issue</span> <span class="title">please</span> <span class="title">do</span> <span class="title">so</span> <span class="title">at</span> (<span class="title">not</span> <span class="title">Homebrew</span>/<span class="title">homebrew</span>):</div><div class="line">  <span class="title">https</span>://<span class="title">github</span>.<span class="title">com</span>/<span class="title">homebrew</span>/<span class="title">homebrew</span>-<span class="title">science</span>/<span class="title">issues</span></div></pre></td></tr></table></figure>

<p>好长的错误信息，不过DEBUG时候要有明（xian）察（de）秋（dan）毫（teng）的耐心，终于发现真正的错误信息在最后(⊙o⊙)…</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/bin/</span>sh: <span class="regexp">/usr/</span>local<span class="regexp">/Cellar/g</span>object-introspection<span class="regexp">/1.42.0/</span>bin<span class="regexp">/g-ir-scanner: /</span>usr<span class="regexp">/local/</span>opt<span class="regexp">/python/</span>bin<span class="regexp">/python: bad interpreter: No such file or directory</span></div></pre></td></tr></table></figure>

<p>于是第一时间把<code>/usr/local/Cellar/gobject-introspection/</code>黏贴到chrome中想去google上找答案，回车后发现chrome竟然直接在页面显示上面的路径，才想起来这是多合一的搜索框的好（huai）处，以后可以直接拿浏览器当finder用了。</p>
<p>顺着路径找到了名字叫 g-ir-scanner 的这个文档。发现这个shell程序需要python来执行了，怀疑是不是之前的python安装有问题（虽然对python没大了解，但是感觉其版本让人眼花缭乱的）。<br>which了一下python果然不在<code>/usr/local/opt</code>下面，方才断定是python安装的问题。</p>
<p>上google查找了一堆相关页面也没发现有直接的解决办法。决定按照brew给出了类似提示解决：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">➜  ~  brew info python</div><div class="line">python: stable <span class="number">2.7</span><span class="number">.8</span> (bottled), HEAD</div><div class="line">https://www.python.org</div><div class="line">Not installed</div><div class="line">From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/python.rb</div><div class="line">==&gt; Dependencies</div><div class="line">Build: pkg-config ✔</div><div class="line">Required: openssl ✘</div><div class="line">Recommended: readline ✘, sqlite ✘, gdbm ✔</div><div class="line"><span class="keyword">...</span></div></pre></td></tr></table></figure>

<p>Oh-my, python果然没有’安装’，想起来之前用的一直是OS X提供的native版本。</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">➜  ~  brew info gobject-introspection</div><div class="line">gobject-introspection: stable 1.42.0 (bottled)</div><div class="line">http://live.gnome.org/GObjectIntrospection</div><div class="line"><span class="comment">/usr/local/Cellar/gobject-introspection/1.42.0 (196 files, 10M) *</span></div><div class="line">  Poured from bottle</div><div class="line">From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/gobject-introspection.rb</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Dependencies</span></span></span></div><div class="line">Build: xz ✔, pkg-config ✔</div><div class="line">Required: glib ✔, libffi ✔</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Options</span></span></span></div></pre></td></tr></table></figure>

<p>但是可以看出<code>gobject-introspection</code>的formula并没有把python列为Required。但是安装vips时候似乎又需要python，所以会出上面的问题╮(╯▽╰)╭</p>
<p>好了，现在解决办法是重新安装一下<code>gobject-introspection</code>：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line">➜  ~  brew reinstall gobject-introspection</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Reinstalling</span> gobject-introspection</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> dependencies for gobject-<span class="symbol">introspection:</span> readline, sqlite, openssl, python</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> gobject-introspection <span class="symbol">dependency:</span> readline</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sf.net/project</span><span class="regexp">/machomebrew/</span><span class="constant">Bottles</span>/readline-<span class="number">6.3</span>.<span class="number">8</span>.mavericks.bottle.tar.gz</span></span></div><div class="line">######################################################################## 100.0%</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Pouring</span> readline-<span class="number">6.3</span>.<span class="number">8</span>.mavericks.bottle.tar.gz</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Caveats</span></span></span></div><div class="line">This formula is keg-only, which means it was not symlinked into /usr/local.</div><div class="line"></div><div class="line">Mac OS X provides similar software, and installing this software in</div><div class="line">parallel can cause all kinds of trouble.</div><div class="line"></div><div class="line">OS X provides the BSD libedit library, which shadows libreadline.</div><div class="line">In order to prevent conflicts when programs look for libreadline we are</div><div class="line">defaulting this GNU Readline installation to keg-only.</div><div class="line"></div><div class="line">Generally there are no consequences of this for you. If you build your</div><div class="line">own software and it requires this formula, you'll need to add to your</div><div class="line">build variables:</div><div class="line"></div><div class="line">    LDFLAGS:  -L/usr/local/opt/readline/lib</div><div class="line">    CPPFLAGS: -I/usr/local/opt/readline/include</div><div class="line"></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Summary</span></span></span></div><div class="line">🍺  /usr/local/Cellar/readline/6.3.8: 40 files, 2.1M</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> gobject-introspection <span class="symbol">dependency:</span> sqlite</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sf.net/project</span><span class="regexp">/machomebrew/</span><span class="constant">Bottles</span>/sqlite-<span class="number">3.8</span>.<span class="number">7</span>.mavericks.bottle.tar.gz</span></span></div><div class="line">######################################################################## 100.0%</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Pouring</span> sqlite-<span class="number">3.8</span>.<span class="number">7</span>.mavericks.bottle.tar.gz</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Caveats</span></span></span></div><div class="line">This formula is keg-only, which means it was not symlinked into /usr/local.</div><div class="line"></div><div class="line">Mac OS X already provides this software and installing another version in</div><div class="line">parallel can cause all kinds of trouble.</div><div class="line"></div><div class="line">OS X provides an older sqlite3.</div><div class="line"></div><div class="line">Generally there are no consequences of this for you. If you build your</div><div class="line">own software and it requires this formula, you'll need to add to your</div><div class="line">build variables:</div><div class="line"></div><div class="line">    LDFLAGS:  -L/usr/local/opt/sqlite/lib</div><div class="line">    CPPFLAGS: -I/usr/local/opt/sqlite/include</div><div class="line"></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Summary</span></span></span></div><div class="line">🍺  /usr/local/Cellar/sqlite/3.8.7: 9 files, 2.1M</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> gobject-introspection <span class="symbol">dependency:</span> openssl</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sf.net/project</span><span class="regexp">/machomebrew/</span><span class="constant">Bottles</span>/openssl-<span class="number">1.0</span>.<span class="number">1</span>j.mavericks.bottle.tar.gz</span></span></div><div class="line">######################################################################## 100.0%</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Pouring</span> openssl-<span class="number">1.0</span>.<span class="number">1</span>j.mavericks.bottle.tar.gz</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Caveats</span></span></span></div><div class="line">A CA file has been bootstrapped using certificates from the system</div><div class="line">keychain. To add additional certificates, place .pem files in</div><div class="line"><span class="comment">  /usr/local/etc/openssl/certs</span></div><div class="line"></div><div class="line">and run</div><div class="line"><span class="comment">  /usr/local/opt/openssl/bin/c_rehash</span></div><div class="line"></div><div class="line">This formula is keg-only, which means it was not symlinked into /usr/local.</div><div class="line"></div><div class="line">Mac OS X already provides this software and installing another version in</div><div class="line">parallel can cause all kinds of trouble.</div><div class="line"></div><div class="line">Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries</div><div class="line"></div><div class="line">Generally there are no consequences of this for you. If you build your</div><div class="line">own software and it requires this formula, you'll need to add to your</div><div class="line">build variables:</div><div class="line"></div><div class="line">    LDFLAGS:  -L/usr/local/opt/openssl/lib</div><div class="line">    CPPFLAGS: -I/usr/local/opt/openssl/include</div><div class="line"></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Summary</span></span></span></div><div class="line">🍺  /usr/local/Cellar/openssl/1.0.1j: 431 files, 15M</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> gobject-introspection <span class="symbol">dependency:</span> python</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sf.net/project</span><span class="regexp">/machomebrew/</span><span class="constant">Bottles</span>/python-<span class="number">2.7</span>.<span class="number">8_2</span>.mavericks.bottle.<span class="number">3</span>.tar.gz</span></span></div><div class="line">######################################################################## 100.0%</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Pouring</span> python-<span class="number">2.7</span>.<span class="number">8_2</span>.mavericks.bottle.<span class="number">3</span>.tar.gz</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Caveats</span></span></span></div><div class="line">Setuptools and Pip have been installed. To update them</div><div class="line">  pip install --upgrade setuptools</div><div class="line">  pip install --upgrade pip</div><div class="line"></div><div class="line">You can install Python packages with</div><div class="line">  pip install &lt;package&gt;</div><div class="line"></div><div class="line">They will install into the site-package directory</div><div class="line"><span class="comment">  /usr/local/lib/python2.7/site-packages</span></div><div class="line"></div><div class="line">See: https://github.com/Homebrew/homebrew/wiki/Homebrew-and-Python</div><div class="line"></div><div class="line">.app bundles were installed.</div><div class="line">Run `brew linkapps` to symlink these to /Applications.</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> /usr/local/<span class="constant">Cellar</span>/python/<span class="number">2.7</span>.<span class="number">8_2</span>/bin/python -s setup.py --no-user-cfg install --force --verbose --install-scripts=<span class="regexp">/u</span></span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> /usr/local/<span class="constant">Cellar</span>/python/<span class="number">2.7</span>.<span class="number">8_2</span>/bin/python -s setup.py --no-user-cfg install --force --verbose --install-scripts=<span class="regexp">/u</span></span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Summary</span></span></span></div><div class="line">🍺  /usr/local/Cellar/python/2.7.8_2: 4776 files, 76M</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> gobject-introspection</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sf.net/project</span><span class="regexp">/machomebrew/</span><span class="constant">Bottles</span>/gobject-introspection-<span class="number">1.42</span>.<span class="number">0</span>.mavericks.bottle.<span class="number">1</span>.tar</span></span></div><div class="line">Already downloaded: /Library/Caches/Homebrew/gobject-introspection-1.42.0.mavericks.bottle.1.tar.gz</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Pouring</span> gobject-introspection-<span class="number">1.42</span>.<span class="number">0</span>.mavericks.bottle.<span class="number">1</span>.tar.gz</span></span></div><div class="line">🍺  /usr/local/Cellar/gobject-introspection/1.42.0: 196 files, 10M</div></pre></td></tr></table></figure>

<p>然后再重复之前的libvips安装命令：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">➜  ~  brew install homebrew/science/vips --with-webp --with-graphicsmagick</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Installing</span> vips from homebrew/homebrew-science</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">http:</span>/<span class="regexp">/www.vips.ecs.soton.ac.uk/supported</span><span class="regexp">/7.40/vips</span>-<span class="number">7.40</span>.<span class="number">11</span>.tar.gz</span></span></div><div class="line">Already downloaded: /Library/Caches/Homebrew/vips-7.40.11.tar.gz</div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> ./configure --prefix=<span class="regexp">/usr/local</span><span class="regexp">/Cellar/vips</span><span class="regexp">/7.40.11 --with-magick --with-magickpackage=GraphicsMagick</span></span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> make check</span></span></div><div class="line">=<span class="ruby"><span class="output"><span class="status">=&gt;</span> make install</span></span></div><div class="line">🍺  /usr/local/Cellar/vips/7.40.11: 196 files, 13M, built in 82 seconds</div></pre></td></tr></table></figure>

<p>终于问题得到了解决，剩下的就是驱动sharp了。</p>
<p>Let’s coding！</p>
<p>写在后面：解决这一个问题大概花费了3个半小时，无奈咱的网路环境就是name非比寻常！连Xcode都没法直接更新。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="解决vips库安装失败问题">解决vips库安装失败问题</h2>
<p>写在前面：本文列出了问题解决的思路和过程，如果需要直接找到简洁的答案，请（mei）移(ce)步(shi)：<br><a href="http://stackoverflow.com/ques]]>
    </summary>
    
      <category term="图形" scheme="http://shieldax.github.io/tags/%E5%9B%BE%E5%BD%A2/"/>
    
      <category term="库" scheme="http://shieldax.github.io/tags/%E5%BA%93/"/>
    
      <category term="安装" scheme="http://shieldax.github.io/tags/%E5%AE%89%E8%A3%85/"/>
    
      <category term="开发" scheme="http://shieldax.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在前面]]></title>
    <link href="http://shieldax.github.io/2014/10/30/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"/>
    <id>http://shieldax.github.io/2014/10/30/写在前面/</id>
    <published>2014-10-30T14:31:44.000Z</published>
    <updated>2014-11-01T06:46:04.000Z</updated>
    <content type="html"><![CDATA[<p>这个博客使用 <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a> 搭建，并部署在免费的 GitHub Pages 上。<br>一直以来有个搭建个人博客的夙愿，无奈各方面条件限制，计划一直处于搁置状态。</p>
<p>直到不久前发现了利用 Octopress 在 GitHub 上搭建博客的方法，遂进行尝试。<br>虽然只能搭建静态博客，不过这对我来说也已经足够。重要的是不需要像使用 WordPress 一样考虑域名和空间等一些繁杂的事，而是专注于分享交流了。</p>
<p>按照官方的文档和一些参考资料，搭建过程倒也顺利。</p>
<p>不过使用 Octopress 几天下来总感觉使用起来不太顺手。于是在到网上搜索可替代方案，在知乎的<a href="http://www.zhihu.com/question/19996679" target="_blank" rel="external">“用 Jekyll 和 Octopress 搭建博客，哪个更合适？”</a>的问题中我发现了现在使用的 Hexo。这情形有点儿鹤蚌相争，渔翁得利的意(qian)思(qiang)。</p>
<p>Hexo是一款来自台北的童鞋(tommy351)[<a href="https://github.com/tommy351]开发的博客程序。" target="_blank" rel="external">https://github.com/tommy351]开发的博客程序。</a><br>至于Hexo相关的介绍和安装配置方式，网上有很多资料可用，我就没必要赘述了，这里推荐一篇写的比较详细的win下搭建方法博文<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></p>
<p>其实决定尝试使用Hexo一个重要原因是其基于自己相对熟悉的 Node.js开发，考虑到以后客(xia)制(zhe)化(teng)的需求，于是放弃了自己不太熟悉的基于 Ruby 的 Octpress。</p>
<p>和 Octpress 比起来，Hexo创建新文章的时候可以直接用中文名字：</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> 写在前面</div></pre></td></tr></table></figure>

<p>通过上面的命令就创建了本篇文章所用的文档，不需要针对中文环境进行额外的配置（当然通过额外的配置，octpress也可以几次直接创建中文标题的博客- -）。这样一来只要标题里没有空格或者<br>特殊字符，连引号都可以省略了。比起Octopress的<code>rake new_post[&#39;title&#39;]</code>方式感觉更加顺手。</p>
<p>至于内容的编辑，自然也是用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a><br>语法来撰写。Markdown的编辑器选择上就很丰富了，比较出色有Mac下的Mou App，或者选择跨平台易于扩展的 Sublime Text编<br>辑器安装 Markdown 的相关插件。</p>
<p><strong>11.1 更新</strong><br>现在我选择的是使用在 sublime 下结合<a href="https://sublime.wbond.net/packages/MarkdownEditing" target="_blank" rel="external">MarkdownEditing</a>插件管理博客内容。</p>
<p>然后是博客里计划放置的内容，主要是记录一些平常开发中遇到的问题和解决方法的，然后是分享互联网上发现<br>的好的共享资料，另外可能会尝试翻译一些外文资料以供参考。</p>
<p>最后不管实际上内容和计划会有多少出入orz，还是希望自己能坚持写下去！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这个博客使用 <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a> 搭建，并部署在免费的 GitHub Pages 上。<br>一直以来有个搭建个人博客的夙愿，无奈各方面条件限制，计划一直处于搁置]]>
    </summary>
    
      <category term="文章" scheme="http://shieldax.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="博客" scheme="http://shieldax.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="hexo" scheme="http://shieldax.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
